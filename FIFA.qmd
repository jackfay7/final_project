---
title: "Cleaning"
format: html
---

```{r}
library(tidyverse)

# fifa_full <- read_csv("data/male_players_23.csv", col_select = c(2,3, 6,7, 8, 9, 10, 11, 12,13,15, 16, 18, 21, 28, 32, 33, 34, 42, 43, 44, 45, 46, 47))

# fifa_full <- fifa_full|>
  # filter(overall > 79)

# fifa_full <- fifa_full|> drop_na()

#write_csv(x = fifa_full, file = "fifa_15_23.csv")

fifa_full <- read_csv("data/fifa_15_23.csv")
```

The data comes from https://www.kaggle.com/datasets/joebeachcapital/fifa-players?select=male_players_23.csv

The data set contains FIFA player ratings and statistics from 2015-2023 Career Mode. To allow for my app to run with better speed I have filtered the data to only include cards with ratings of 80 or higher. 

```{r}
library(shiny)
library(plotly)
library(maps)

fifa_full <- read_csv("data/fifa_15_23.csv")
variable_choices <- names(fifa_full)[19:24]
world_df <- map_data("world")

ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      selectInput("player_choice", label = "Choose player(s)",
                  choices = unique(fifa_full$short_name), selected = NULL, multiple = TRUE),
      selectInput("league_choice", label = "Choose league(s)",
                  choices = c("All", unique(fifa_full$league_name)), selected = "All"),
      selectInput("nationality_choice", label = "Choose nationality(s)",
                  choices = c("All", unique(fifa_full$nationality_name)), selected = "All"),
      selectInput("team_choice", label = "Choose team(s)",
                  choices = c("All", unique(fifa_full$club_name)), selected = "All")
    ),
    mainPanel(
      tabsetPanel(
        tabPanel("Line Graph", plotlyOutput(outputId = "line_graph"),
                 selectInput("yvar", label = "Choose a Variable", choices = variable_choices, selected = "pace")),
        tabPanel("Bar Graph", plotlyOutput(outputId = "bar_graph"),
                 radioButtons("fifa_year", label = "Choose the Year", choices = 15:23)),
        tabPanel("World Graph", plotOutput(outputId = "world_graph"),
                 selectInput("yvar2", label = "Choose a Variable", choices = variable_choices, selected = "pace"),
                 radioButtons("fifa_year2", label = "Choose the Year", choices = 15:23))
    )
  )
)
)


server <- function(input, output, session) {
  
# observeEvent(c(input$league_choice, input$nationality_choice, input$team_choice), {
#   player_choices <- fifa_full|> distinct(short_name) |> pull(short_name)
#  if (input$league_choice != "All" & input$nationality_choice == "All" & input$team_choice == "All") {. 
#   player_choices <- fifa_full |> filter(league_name == input$league_choice) |> distinct(short_name) |> pull(short_name)
#   }
# if (input$nationality_choice != "All" & input$league_choice == "All" & input$team_choice == "All") {
#   player_choices <- fifa_full |> filter(nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
#  } 
# if (input$team_choice != "All" & input$nationality_choice != "All" & input$league_choice == "All") {
#   player_choices <- fifa_full |> filter(club_name == input$team_choice) |> distinct(short_name) |> pull(short_name)
#   }
# if(input$league_choice != "All" & input$nationality_choice != "All") {
#     player_choices <- filter(league_name == input$league_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
# }
# if(input$nationality_choice != "All" & input$team_choice != "All"){
#   player_choices <- filter(club_name == input$team_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
# }
# if( input$league_choice != "All" & input$team_choice != "All"){
#   player_choices <- filter(club_name == input$team_choice, league_name == input$league_choice) |> distinct(short_name) |> pull(short_name)
# }
# if(input$league_choice != "All" & input$nationality_choice != "All" & input$team_choice != "All"){
#   player_choices <- filter(club_name == input$team_choice, league_name == input$league_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
# }
#   updateSelectInput(session, "player_choice",
#                     choices = player_choices)
# })
  
  
  fifa_line_react <- reactive({
    fifa_full |> filter(short_name %in% input$player_choice) 
  })
  
  fifa_bar_react <- reactive({
    fifa_full|>
  filter(short_name %in% input$player_choice, fifa_version == input$fifa_year)|>
  pivot_longer(cols = 19:24, names_to = "stat", values_to = "value")|>
  group_by(short_name, stat, value, overall)|>
  summarise()
  })
  
  fifa_world_react <- reactive({
    fifa_full_year <- fifa_full|> filter(fifa_version == input$fifa_year2)
    
    world_full <- left_join(world_df, fifa_full_year, by = c("region" = "nationality_name"))
    world_full
  })
  
  output$line_graph <- renderPlotly({
     req(input$player_choice)
   if (length(input$player_choice) == 0) {
     return(plot_ly() %>% layout(title = "No player selected"))
   }
    plot1 <- ggplot(data = fifa_line_react(),
           aes(x = fifa_version, y = .data[[input$yvar]], color = short_name, label = overall)) +
      geom_point()+
      geom_line( tooltip = "label") +
      labs(title = "Player Comparison")
    
    ggplotly(plot1, tooltip = "label")
  })
  
  output$bar_graph <- renderPlotly({
     req(input$player_choice)
  if (length(input$player_choice) == 0) {
    return(plot_ly() %>% layout(title = "No player selected"))
  }
    plot2 <- ggplot(fifa_bar_react(), 
       aes(x = stat, y = value, fill = short_name, label = value))+
  geom_col(position = "dodge", color = "black")+
      labs(x = "Statistics", y = input$fifa_year)+
      scale_y_continuous(breaks = seq(0, 100, by = 20))
      
ggplotly(plot2, tooltip = "label")


  })
  
output$world_graph <- renderPlot({
   ggplot(data = fifa_world_react(),
       aes(x = long, y = lat, group = group))+
  geom_polygon(aes(fill = .data[[input$yvar2]]))+
  coord_map(projection = "mercator", xlim = c(-180, 180))+
  scale_fill_viridis_c()
  
})

  
}

shinyApp(ui, server)

```

```{r}

```

```{r}
fifa_full |>
  filter(short_name %in% c("L. Messi", "K. Benzema"), fifa_version == 23) |>
  pivot_longer(cols = 19:24, names_to = "stat", values_to = "value") |>
  group_by(short_name, stat, value, overall) |>
  summarise()

library(plotly)

plot1<- ggplot(fifa_test, 
       aes(x = stat, y = value, fill = short_name, label = value))+
  geom_col(position = "dodge")

ggplotly(plot1, tooltip = "label")
```
# First App Section
```{r}
library(tidyverse)
library(shiny)
library(plotly)
library(shinythemes)

fifa_full <- read_csv("data/fifa_15_23.csv")
variable_choices <- names(fifa_full)[c(6, 19:24)]

ui <- fluidPage(
  titlePanel("FIFA Career Mode Comparison App"),
  theme = shinytheme("flatly"),
  sidebarLayout(
    sidebarPanel(
      selectInput("league_choice", label = "League Filter",
                  choices = c("All", unique(fifa_full$league_name)), selected = "All"),
      selectInput("team_choice", label = "Team Filter",
                  choices = c("All", unique(fifa_full$club_name)), selected = "All"),
      selectInput("nationality_choice", label = "Nationality Filter",
                  choices = sort(c("All", unique(fifa_full$nationality_name))), selected = "All"),
      selectInput(inputId = "player_choice", label = "Choose player(s)",
                  choices = NULL, selected = NULL, multiple = TRUE)
    ),
    mainPanel(
      tabsetPanel(
        tabPanel("Line Graph", plotlyOutput(outputId = "line_graph"),
                 selectInput("yvar", label = "Choose a Variable", choices = variable_choices, selected = "pace"),
                 tableOutput(outputId = "summary_table1")),
        tabPanel("Bar Graph", plotlyOutput(outputId = "bar_graph"),
                 selectInput("fifa_year", label = "Choose the Year", choices = 15:23, selected = 23),
                 tableOutput(outputId = "summary_table2"))
        
    )
  )
)
)


server <- function(input, output, session) {
  
observeEvent(c(input$league_choice, input$nationality_choice, input$team_choice), {
  player_choices <- fifa_full|> distinct(short_name) |> pull(short_name)
  
 if (input$league_choice != "All" & input$nationality_choice == "All" & input$team_choice == "All") {
  player_choices <- fifa_full |> filter(league_name == input$league_choice) |> distinct(short_name) |> pull(short_name)
 }
  
if (input$nationality_choice != "All" & input$league_choice == "All" & input$team_choice == "All") {
  player_choices <- fifa_full |> filter(nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
}
  
if (input$team_choice != "All" & input$nationality_choice == "All" & input$league_choice == "All") {
  player_choices <- fifa_full |> filter(club_name == input$team_choice) |> distinct(short_name) |> pull(short_name)
}
  
if(input$league_choice != "All" & input$nationality_choice != "All" & input$team_choice == "All") {
    player_choices <- fifa_full|> filter(league_name == input$league_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
}
  
if(input$nationality_choice != "All" & input$team_choice != "All" & input$league_choice == "All"){
  player_choices <- fifa_full |> filter(club_name == input$team_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
}
  
if( input$league_choice != "All" & input$team_choice != "All" & input$nationality_choice == "All"){
  player_choices <- fifa_full |> filter(club_name == input$team_choice, league_name == input$league_choice) |> distinct(short_name) |> pull(short_name)
}
  
if(input$league_choice != "All" & input$nationality_choice != "All" & input$team_choice != "All"){
  player_choices <- fifa_full |> filter(club_name == input$team_choice, league_name == input$league_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
}
   
  updateSelectInput(inputId = "player_choice",
                    choices = sort(player_choices))
})

  observeEvent(input$league_choice, {
  player_choices <- fifa_full |> distinct(short_name) |> pull(short_name)
  
  if (input$league_choice != "All") {
    team_choices <- fifa_full |> 
      filter(league_name == input$league_choice) |> 
      distinct(club_name) |> 
      pull(club_name)
  } else {
    team_choices <- unique(fifa_full$club_name)
  }
  
  updateSelectInput(inputId = "team_choice", choices = sort(c("All", team_choices)), selected = "All")
  })
  
  fifa_line_react <- reactive({
    fifa_full |> filter(short_name %in% input$player_choice)|>
      group_by(short_name, fifa_version)|>
      summarise(overall = median(overall, na.rm = TRUE),
                  pace = median(pace, na.rm = TRUE),
                   shooting = median(shooting, na.rm = TRUE),
                   passing = median(passing, na.rm = TRUE),
                   dribbling = median(dribbling, na.rm = TRUE),
                   defending = median(defending, na.rm = TRUE),
                   physic = median(physic, na.rm = TRUE))
  })
  
  fifa_bar_react <- reactive({
    fifa_full|>
  filter(short_name %in% input$player_choice, fifa_version == input$fifa_year)|>
  pivot_longer(cols = 19:24, names_to = "stat", values_to = "value")|>
  group_by(short_name, stat)|>
  summarise(value = median(value), 
            overall = median(overall))
  })
  
  
  output$line_graph <- renderPlotly({
     req(input$player_choice)
    plot1 <- ggplot(data = fifa_line_react(),
           aes(x = fifa_version, y = .data[[input$yvar]], color = short_name, label = overall)) +
      geom_point()+
      geom_line() +
      labs(title = "Player Comparison Over Time", x = "Year")
    
    ggplotly(plot1, tooltip = "label")
  })
  
  output$bar_graph <- renderPlotly({
     req(input$player_choice, input$fifa_year)
    plot2 <- ggplot(fifa_bar_react(), 
       aes(x = stat, y = value, group = short_name, fill = short_name, label = value))+
  geom_col(position = "dodge", color = "black")+
      labs(x = "Statistics", y = input$fifa_year, title = "Year Specfic Comparison")
      
ggplotly(plot2, tooltip = "label")


  })
  
  output$summary_table1 <- renderTable({
      fifa_full |>
        filter(short_name %in% input$player_choice) |>
        group_by(short_name)|>
        summarise(`avg overall` = mean(overall, na.rm = TRUE),
                  `avg pace` = mean(pace, na.rm = TRUE),
                  `avg shooting` = mean(shooting, na.rm = TRUE),
                  `avg passing` = mean(passing, na.rm = TRUE),
                  `avg dribbling` = mean(dribbling, na.rm = TRUE),
                  `avg defending` = mean(defending, na.rm = TRUE),
                  `avg physical` = mean(physic, na.rm = TRUE))
     
    })
  output$summary_table2 <- renderTable({
     fifa_full |>
        filter(short_name %in% input$player_choice, fifa_version == input$fifa_year) |>
        group_by(short_name)|>
        summarise(overall = median(overall, na.rm = TRUE),
                  pace = median(pace, na.rm = TRUE),
                  shooting = median(shooting, na.rm = TRUE),
                  passing = median(passing, na.rm = TRUE),
                  dribbling = median(dribbling, na.rm = TRUE),
                  defending = median(defending, na.rm = TRUE),
                  physical = median(physic, na.rm = TRUE))
    })

  
}

shinyApp(ui, server)

```


# Second App Section
```{r}
library(tidyverse)
library(shiny)
library(plotly)
library(shinythemes)

fifa_full <- read_csv("data/fifa_15_23.csv")

ui <- fluidPage(
  titlePanel("FIFA Career Mode Comparison App"),
  theme = shinytheme("flatly"),
  sidebarLayout(
    sidebarPanel(actionButton("generate_player", "Generate New Random Player"),
                 actionButton("show_hint", "Hint")
                  ),
    mainPanel(
      tabsetPanel(
        tabPanel("Player Guess", tableOutput(outputId = "player_summary"),
                 textOutput("hint_text1"),
                 textOutput("hint_text2"),
                 textOutput("hint_text3"),
                 textOutput("hint_text4"),
                 textOutput("hint_text5"),
                 textOutput("hint_text6"),
                 textOutput("hint_text7")
                 )
    )
  )
)
)


server <- function(input, output, session) {
  
 
  random_react <- eventReactive(input$generate_player, {
  fifa_full %>%
    sample_n(1)
})
  
  output$player_summary <- renderTable({
    if (!is.null(random_react())) {
      random_react() |>
        select(6, 11, 12, 16:24)
    }
  })
  
  
  i <- reactiveVal(0)
  
  observeEvent(input$show_hint, {
    if (!is.null(random_react()) & i() == 0) {
      output$hint_text1 <- renderText({
        paste0("FIFA Version: ", random_react()$fifa_version)
      })
      i(1)
    }else if(i() == 1){
      output$hint_text2 <- renderText({
        paste0("Player Positions: ", random_react()$player_positions)
    })
      i(2)
    }else if(i() == 2){
      output$hint_text3 <- renderText({
        paste0("Nationality: ", random_react()$nationality_name)
    })
      i(3)
    }else if(i() == 3){
      output$hint_text4 <- renderText({
        paste0("League Name: ", random_react()$league_name)
    })
      i(4)
    }else if(i() == 4){
      output$hint_text5 <- renderText({("*FINAL HINT*")})
      output$hint_text6 <- renderText({
        paste("Club Name: ", random_react()$club_name)
    })
      i(5)
    }else if(i() == 5){
      output$hint_text7 <- renderText({
        paste0("Player: ", random_react()$long_name)
    })
      i(6)
    }
    
  })
  
}

shinyApp(ui, server)
```






# Final App Unofficial
```{r}
library(tidyverse)
library(shiny)
library(plotly)
library(shinythemes)
fifa_full <- read_csv("data/fifa_15_23.csv")
variable_choices <- names(fifa_full)[c(6, 19:24)]
ui <- fluidPage(
  titlePanel("FIFA Career Mode Comparison App"),
  theme = shinytheme("flatly"),
      tabsetPanel(
        tabPanel("Line Graph",
                 sidebarPanel(
                   selectInput("yvar", label = "Choose a Variable", choices = variable_choices, selected = "pace"),
                   selectInput("league_choice", label = "League Filter",
                               choices = c("All", unique(fifa_full$league_name)), selected = "All"),
                   selectInput("team_choice", label = "Team Filter",
                               choices = c("All", unique(fifa_full$club_name)), selected = "All"),
                   selectInput("nationality_choice", label = "Nationality Filter",
                               choices = sort(c("All", unique(fifa_full$nationality_name))), selected = "All"),
                   selectInput(inputId = "player_choice", label = "Choose player(s)",
                               choices = NULL, selected = NULL, multiple = TRUE)
                 ),
                 mainPanel(plotlyOutput(outputId = "line_graph"),
                 tableOutput(outputId = "summary_table1")
        )),
        tabPanel("Bar Graph",
                 mainPanel(plotlyOutput(outputId = "bar_graph"),
                 selectInput("fifa_year", label = "Choose the Year", choices = 15:23, selected = 23),
                 tableOutput(outputId = "summary_table2")
        )),
        tabPanel("Player Guess",
                 sidebarPanel(actionButton("generate_player", "Generate New Random Player"),
                 actionButton("show_hint", "Hint"),
                 textOutput("hint_text1"),
                 textOutput("hint_text2"),
                 textOutput("hint_text3"),
                 textOutput("hint_text4"),
                 textOutput("hint_text5"),
                 textOutput("hint_text6")
                 ),
                 mainPanel(tableOutput(outputId = "player_summary"),
                 textOutput("hint_text7"),
                 textOutput("hint_text8")
                 )
        )
      )
    )

server <- function(input, output, session) {
  
observeEvent(c(input$league_choice, input$nationality_choice, input$team_choice), {
  player_choices <- fifa_full|> distinct(short_name) |> pull(short_name)
  
 if (input$league_choice != "All" & input$nationality_choice == "All" & input$team_choice == "All") {
  player_choices <- fifa_full |> filter(league_name == input$league_choice) |> distinct(short_name) |> pull(short_name)
 }
  
if (input$nationality_choice != "All" & input$league_choice == "All" & input$team_choice == "All") {
  player_choices <- fifa_full |> filter(nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
}
  
if (input$team_choice != "All" & input$nationality_choice == "All" & input$league_choice == "All") {
  player_choices <- fifa_full |> filter(club_name == input$team_choice) |> distinct(short_name) |> pull(short_name)
}
  
if(input$league_choice != "All" & input$nationality_choice != "All" & input$team_choice == "All") {
    player_choices <- fifa_full|> filter(league_name == input$league_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
}
  
if(input$nationality_choice != "All" & input$team_choice != "All" & input$league_choice == "All"){
  player_choices <- fifa_full |> filter(club_name == input$team_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
}
  
if( input$league_choice != "All" & input$team_choice != "All" & input$nationality_choice == "All"){
  player_choices <- fifa_full |> filter(club_name == input$team_choice, league_name == input$league_choice) |> distinct(short_name) |> pull(short_name)
}
  
if(input$league_choice != "All" & input$nationality_choice != "All" & input$team_choice != "All"){
  player_choices <- fifa_full |> filter(club_name == input$team_choice, league_name == input$league_choice, nationality_name == input$nationality_choice) |> distinct(short_name) |> pull(short_name)
}
   
  updateSelectInput(inputId = "player_choice",
                    choices = sort(player_choices))
})

  observeEvent(input$league_choice, {
  player_choices <- fifa_full |> distinct(short_name) |> pull(short_name)
  
  if (input$league_choice != "All") {
    team_choices <- fifa_full |> 
      filter(league_name == input$league_choice) |> 
      distinct(club_name) |> 
      pull(club_name)
  } else {
    team_choices <- unique(fifa_full$club_name)
  }
  
  updateSelectInput(inputId = "team_choice", choices = sort(c("All", team_choices)), selected = "All")
  })
  
  fifa_line_react <- reactive({
    fifa_full |> filter(short_name %in% input$player_choice)|>
      group_by(short_name, fifa_version)|>
      summarise(overall = median(overall, na.rm = TRUE),
                  pace = median(pace, na.rm = TRUE),
                   shooting = median(shooting, na.rm = TRUE),
                   passing = median(passing, na.rm = TRUE),
                   dribbling = median(dribbling, na.rm = TRUE),
                   defending = median(defending, na.rm = TRUE),
                   physic = median(physic, na.rm = TRUE))
  })
  
  fifa_bar_react <- reactive({
    fifa_full|>
  filter(short_name %in% input$player_choice, fifa_version == input$fifa_year)|>
  pivot_longer(cols = 19:24, names_to = "stat", values_to = "value")|>
  group_by(short_name, stat)|>
  summarise(value = median(value), 
            overall = median(overall))
  })
  

  
  random_react <- eventReactive(input$generate_player, {
    output$hint_text1 <- renderText(NULL)
  output$hint_text2 <- renderText(NULL)
  output$hint_text3 <- renderText(NULL)
  output$hint_text4 <- renderText(NULL)
  output$hint_text5 <- renderText(NULL)
  output$hint_text6 <- renderText(NULL)
  output$hint_text7 <- renderText(NULL)
  output$hint_text8 <- renderText(NULL)
  fifa_full |>
    sample_n(1)
  
})
  
  output$player_summary <- renderTable({
    if (!is.null(random_react())) {
      random_react() |>
        select(6, 11, 12, 16:24)
    }
  })
  
  
  i <- reactiveVal(0)
  
  observeEvent(input$show_hint, {
    if (!is.null(random_react()) & i() == 0) {
      output$hint_text1 <- renderText({
        paste0("FIFA Version: ", random_react()$fifa_version)
      })
      i(1)
    }else if(i() == 1){
      output$hint_text2 <- renderText({
        paste0("Player Positions: ", random_react()$player_positions)
    })
      i(2)
    }else if(i() == 2){
      output$hint_text3 <- renderText({
        paste0("Nationality: ", random_react()$nationality_name)
    })
      i(3)
    }else if(i() == 3){
      output$hint_text4 <- renderText({
        paste0("League Name: ", random_react()$league_name)
    })
      i(4)
    }else if(i() == 4){
      output$hint_text5 <- renderText({("*FINAL HINT*")})
      output$hint_text6 <- renderText({
        paste("Club Name: ", random_react()$club_name)
    })
      i(5)
    }else if(i() == 5){
      output$hint_text7 <- renderText({
        paste0("Player: ", random_react()$long_name)
    })
       output$hint_text8 <- renderText({
        paste("Player URL: ", random_react()$player_url)
    })
       i(6)
    }
    
  })
  
  
  output$line_graph <- renderPlotly({
     req(input$player_choice)
    plot1 <- ggplot(data = fifa_line_react(),
           aes(x = fifa_version, y = .data[[input$yvar]], color = short_name, label = overall)) +
      geom_point()+
      geom_line() +
      labs(title = "Player Comparison Over Time", x = "Year")
    
    ggplotly(plot1, tooltip = "label")
  })
  
  output$bar_graph <- renderPlotly({
     req(input$player_choice, input$fifa_year)
    plot2 <- ggplot(fifa_bar_react(), 
       aes(x = stat, y = value, group = short_name, fill = short_name, label = value))+
  geom_col(position = "dodge", color = "black")+
      labs(x = "Statistics", y = input$fifa_year, title = "Year Specfic Comparison")
      
ggplotly(plot2, tooltip = "label")


  })
  
  output$summary_table1 <- renderTable({
      fifa_full |>
        filter(short_name %in% input$player_choice) |>
        group_by(short_name)|>
        summarise(`avg overall` = mean(overall, na.rm = TRUE),
                  `avg pace` = mean(pace, na.rm = TRUE),
                  `avg shooting` = mean(shooting, na.rm = TRUE),
                  `avg passing` = mean(passing, na.rm = TRUE),
                  `avg dribbling` = mean(dribbling, na.rm = TRUE),
                  `avg defending` = mean(defending, na.rm = TRUE),
                  `avg physical` = mean(physic, na.rm = TRUE))
     
    })
  output$summary_table2 <- renderTable({
     fifa_full |>
        filter(short_name %in% input$player_choice, fifa_version == input$fifa_year) |>
        group_by(short_name)|>
        summarise(overall = median(overall, na.rm = TRUE),
                  pace = median(pace, na.rm = TRUE),
                  shooting = median(shooting, na.rm = TRUE),
                  passing = median(passing, na.rm = TRUE),
                  dribbling = median(dribbling, na.rm = TRUE),
                  defending = median(defending, na.rm = TRUE),
                  physical = median(physic, na.rm = TRUE))
    })

  
}

shinyApp(ui, server)
```



