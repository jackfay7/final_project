---
title: "Cleaning"
format: html
---

```{r}
library(tidyverse)

# fifa_full <- read_csv("data/male_players_23.csv", col_select = c(2,3, 6,7, 8, 9, 10, 11, 12,13,15, 16, 18, 21, 28, 32, 33, 34, 42, 43, 44, 45, 46, 47))

# fifa_full <- fifa_full|>
  # filter(overall > 79)

# fifa_full <- fifa_full|> drop_na()

#write_csv(x = fifa_full, file = "fifa_15_23.csv")

fifa_full <- read_csv("data/fifa_15_23.csv")

fifa_full <- fifa_full|>
  filter(overall > 84)
```

The data comes from https://www.kaggle.com/datasets/joebeachcapital/fifa-players?select=male_players_23.csv

The data set contains FIFA player ratings and statistics from 2015-2023 Career Mode. To allow for my app to run with better speed I have filtered the data to only include cards with ratings of 85 or higher. 

```{r}
library(shiny)
library(plotly)

variable_choices <- names(fifa_full)[19:24]

ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      selectInput("player_choice", label = "Choose player(s)",
                  choices = fifa_full$short_name,
                  multiple = TRUE),
      selectInput("yvar", label = "Choose a Variable", choices = variable_choices, selected = "none"),
      radioButtons("fifa_year", label = "Choose the Year", choices = 15:23)
    ),
    mainPanel(
      tabsetPanel(
        tabPanel("Line Graph", plotOutput(outputId = "line_graph")),
        tabPanel("Bar Graph", plotlyOutput(outputId = "bar_graph"))
      )
    )
  )
)

server <- function(input, output, session) {
  
  fifa_line_react <- reactive({
    fifa_full |> filter(short_name %in% input$player_choice) 
  })
  
  fifa_bar_react <- reactive({
    fifa_full|>
  filter(short_name %in% input$player_choice, fifa_version == input$fifa_year)|>
  pivot_longer(cols = 19:24, names_to = "stat", values_to = "value")|>
  group_by(short_name, stat, value, overall)|>
  summarise()
  })
  
  output$line_graph <- renderPlot({
    ggplot(data = fifa_line_react(),
           aes(x = fifa_version, y = .data[[input$yvar]], color = short_name)) +
      geom_point()+
      geom_line() +
      theme_minimal(base_size = 30)
  })
  
  output$bar_graph <- renderPlotly({
    plot1<- ggplot(fifa_bar_react(), 
       aes(x = stat, y = value, fill = short_name, label = value))+
  geom_col(position = "dodge")
      

ggplotly(plot1, tooltip = "label")
  })

  
}

shinyApp(ui, server)

```

```{r}

```

```{r}
fifa_test <- fifa_full|>
  filter(short_name == "L. Messi" |short_name == "K. Benzema", fifa_version == 23)|>
  pivot_longer(cols = 19:24, names_to = "stat", values_to = "value")|>
  group_by(short_name, stat, value, overall)|>
  summarise()

library(plotly)

plot1<- ggplot(fifa_test, 
       aes(x = stat, y = value, fill = short_name, label = value))+
  geom_col(position = "dodge")

ggplotly(plot1, tooltip = "label")
```

